{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "MenuFamille",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/info",
  "tags": [
    {
      "name": "user",
      "description": "Everything about users accounts"
    },
    {
      "name": "family",
      "description": "Everything about family"
    },
    {
      "name": "menu",
      "description": "Operations about menu"
    },
    {
      "name": "membre",
      "description": "Operations about Membre"
    },
    {
      "name": "recipe",
      "description": "Operations on Recipe"
    },
    {
      "name": "denree",
      "description": "Operations on Denree"
    },
    {
      "name" : "categorie",
      "description": "Operations on categories"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/createWithArray": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithArrayInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithListInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/famille/CreateFamilly/{id_mem}": {
      "post": {
        "tags": [
          "family"
        ],
        "summary": "Create family",
        "description": "This can only be done by the logged in user.",
        "operationId": "CreateFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member that's creating the familly",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created family object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Famille-without-id-and-nb_members"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Famille"
            }
          }
        }
      }
    },
    "/famille/CheckAccesCode/{code}": {
      "get": {
        "tags": [
          "family"
        ],
        "summary": "Return the familly link to an acces code",
        "description": "for the checking of a acces code link, it will return the familly to the front-end for easier add",
        "operationId": "CheckAccesCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code that the futur member need to have to join",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Famille"
            }
          }
        }
      }
    },
    "/famille/RetirerMembreNumber/{id}": {
      "put": {
        "tags": [
          "family"
        ],
        "summary": "lower a member to the member count of familly",
        "description": "for easier back-end understandability, the add and lower member count by hand",
        "operationId": "RetirerMembreNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "nb_member": {"type": "integer", "format": "int64"}
              }
            }
          }
        }
      }
    },
    "/famille/AjouterMembreNumber/{id}": {
      "put": {
        "tags": [
          "family"
        ],
        "summary": "add a member to the member count of familly",
        "description": "for easier back-end understandability, the add and lower member count by hand",
        "operationId": "Ajouter MembreNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "nb_member": {"type": "integer", "format": "int64"}
              }
            }
          }
        }
      }
    },
    "/famille/IsThereParent/{id_fam}": {
      "get": {
        "tags": [
          "family"
        ],
        "summary": "Return true if a familly as a Parent",
        "description": "return true if a familly as a Parent and return false if not",
        "operationId": "PapaOuTes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fam",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "is_okay": {"type": "boolean", "value": "true"}
              }
            }
          }
        }
      }
    },
    "/famille/Defrole/{id_fam}/{id_mem}": {
      "put": {
        "tags": [
          "family"
        ],
        "summary": "Define the role of a member",
        "description": "Used to change the role of a member of a familly",
        "operationId": "DefineRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fem",
            "in": "path",
            "description": "id of the familly that the member will change role for",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member that will change role",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created family object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {"type": "string"}
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "is_okay": {"type": "boolean", "value": "true"}
              }
            }
          }
        }
      }
    },
    "/famille/{id_fam}/{id_mem}": {
      "delete": {
        "tags": [
          "family"
        ],
        "summary": "Delete a member from a familly",
        "description": "Used to delete a member from a familly",
        "operationId": "DeleteMemberFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fem",
            "in": "path",
            "description": "id of the familly that the member will leave",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member that will leave a familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/famille/GetListFamilly/{id}": {
      "get": {
        "tags": [
          "family"
        ],
        "summary": "Return all the familly a member is part of",
        "description": "Return all the familly a member is part of but not the role he has in all of those",
        "operationId": "GetListFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the member",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Famille"
              }
            }
          }
        }
      }
    },
    "famille/{id}": {
      "delete": {
        "tags": [
          "family"
        ],
        "summary": "Delete a familly and return a message is it was ok",
        "description": "Delete a familly and will delete the link between member and familly",
        "operationId": "DeleteFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "menu/{id}": {
      "delete": {
        "tags": [
          "menu"
        ],
        "summary": "Delete a menu and return a message is it was ok",
        "description": "Delete a menu and will delete the link all of their table linked",
        "operationId": "DeleteMenu",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the menu",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "menu/GetAllInfo/{id}": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "get All of the info of a Menu and all that is linked with",
        "description": "get all of the info of a menu and all of their table linked",
        "operationId": "Get_Menu_All_Info_PK",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the menu",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Menu_full"
            }
          }
        }
      }
    },
    "menu/GetLockedMenu/{id_fam}": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "get basics info of a Menu locked",
        "description": "get all of the info of a Menu locked",
        "operationId": "Get_Current_Locked_Menu",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fam",
            "in": "path",
            "description": "id of the familly who's the owner of menu",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "array",
                "items" : {
                  "$ref": "#/definitions/Menu"
              }
            }
          }
        }
      }
    },
    "menu/GetManualUnlockedMenu/{id_fam}": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "get basics info of a Menu unlocked and manually fillable",
        "description": "get all of the info of a Menu unlocked and manually fillable",
        "operationId": "Get_Manual_Unlocked_Menu",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fam",
            "in": "path",
            "description": "id of the familly who's the owner of menu",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "array",
                "items" : {
                  "$ref": "#/definitions/Menu"
              }
            }
          }
        }
      }
    },
    "menu/GetUnlockedMenu/{id_fam}": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "get basics info of a Menu unlocked",
        "description": "get all of the info of a Menu unlocked",
        "operationId": "Get_Unlocked_Menu",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fam",
            "in": "path",
            "description": "id of the familly who's the owner of menu",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "array",
                "items" : {
                  "$ref": "#/definitions/Menu"
              }
            }
          }
        }
      }
    },
    "menu/GetMenuId/{id}": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "get basics of a Menu with the id of the menu",
        "description": "get all of the info of a Menu unlocked",
        "operationId": "Get_Menu_By_Id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Menu",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "array",
                "items" : {
                  "$ref": "#/definitions/Menu"
              }
            }
          }
        }
      }
    },
    "/membre/GetListMembre/{id}": {
      "get": {
        "tags": [
          "membre"
        ],
        "summary": "Return all the membre part of a familly",
        "description": "Return all the member composing a familly without their roles",
        "operationId": "GetListMembre",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fam",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Membre_full_without_pswd"
              }
            }
          }
        }
      }
    },
    "/membre/{id_fam}/{id_mem}": {
      "post": {
        "tags": [
          "membre"
        ],
        "summary": "Add a member to a familly",
        "description": "Add a member to a familly with a role",
        "operationId": "JoinFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fam",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "role",
            "description": "role in string, must be 'parent' or 'enfant'",
            "required": true,
            "schema": {
              "type" : "object",
              "properties": { "role": {"type": "string"}}
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Famille_Membre"
              }
            }
          }
        }
      }
    },
    "/membre/{id_fam}/{id_mem} (delete)": {
      "delete": {
        "tags": [
          "membre"
        ],
        "summary": "Remove a member from a familly",
        "description": "Remove a member from a familly",
        "operationId": "LeaveFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fam",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/membre/AddFav/{id_mem}/{id_rec}": {
      "post": {
        "tags": [
          "membre"
        ],
        "summary": "Add a recipe to the favorites",
        "description": "Add a recipe to the favorites, need to be child or parent",
        "operationId": "AddFavorites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id_rec",
            "in": "path",
            "description": "id of the recipe",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id_membre": {"type": "integer", "format": "int64"},
                "id_recette": {"type": "integer", "format": "int64"}
              }
            }
          }
        }
      }
    },
    "/membre/RemoveFav/{id_mem}/{id_rec}": {
      "delete": {
        "tags": [
          "membre"
        ],
        "summary": "Remove a recipe from favorites",
        "description": "Remove a recipe from favorites, need to be child or parent",
        "operationId": "RemoveFavorites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id_rec",
            "in": "path",
            "description": "id of the recipe",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/membre/ListFav/{id_mem}": {
      "get": {
        "tags": [
          "membre"
        ],
        "summary": "Get the list of the favorites from a member",
        "description": "Get the list of the favorites from a member, need to be child or parent",
        "operationId": "ListFavorites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "recettes": { "type" : "array", "items" :
                  {"type": "object", "properties": 
                    {
                      "id_recette": {"type": "integer","format": "int64"},
                      "nom": {"type":"string"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recette/CreateRecipeAllInfo": {
      "post": {
        "tags": [
          "recipe"
        ],
        "summary": "Create a recipe",
        "description": "Create a recipe and link it with it's denree, categories and tags",
        "operationId": "Create_Recipe_All_Infos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recipe",
            "in": "body",
            "description": "full information of a recipe",
            "required": true,
            "type": "object",
            "properties": {
              "nom" : {"type" : "string"},
              "difficulte" : {"type" : "integer", "format": "int64"},
              "calorie" : {"type" : "integer", "format": "int64"},
              "temps_cuisson" : {"type" : "integer", "format": "int64"},
              "temps_preparation" : {"type" : "integer", "format": "int64"},
              "nb_personne" : {"type" : "integer", "format": "int64"},
              "nutriscore" : {"type" : "string"},
              "preparation" : {"type" : "string"},
              "tags": { "$ref":"#/definitions/Tags_full"},
              "categorie": { "$ref": "#/definitions/Categorie_full"},
              "denree" : { "$ref": "#/definitions/Denree_full"}
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                      "id_recette": {"type": "integer","format": "int64"},
                      "nom" : {"type" : "string"},
                      "difficulte" : {"type" : "integer", "format": "int64"},
                      "calorie" : {"type" : "integer", "format": "int64"},
                      "temps_cuisson" : {"type" : "integer", "format": "int64"},
                      "temps_preparation" : {"type" : "integer", "format": "int64"},
                      "nb_personne" : {"type" : "integer", "format": "int64"},
                      "nutriscore" : {"type" : "string"},
                      "preparation" : {"type" : "string"}
                  }
                }
              }
            }
          }
        },
        "/denree/Like/{nom}": {
          "get": {
            "tags": [
              "denree"
            ],
            "summary": "Get a list of denree with the name 'nom' or something close to that",
            "description": "Get a list of denree with a name + an iLike (like an SQL 'Like' but case insensitive)",
            "operationId": "FindWithLike",
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "name": "nom",
                "in": "path",
                "description": "name of the denree",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "default": {
                "description": "successful operation",
                "schema": {
                  "type": "object",
                  "properties": {
                    "denrees": { "type" : "array", "items" :
                      { "type": "object", "properties": 
                          {
                            "id_denree": {"type": "integer","format": "int64"},
                            "nom": {"type":"string"},
                            "nutriscore": {"type": "string"},
                            "calories": {"type": "integer","format": "int64"}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/denree/FindOrCreate/{nom}": {
            "get": {
              "tags": [
                "denree"
              ],
              "summary": "Find a denree from it's exact name (case sensitive) or create it without nutriscore and calories",
              "description": "Get a denree or create it",
              "operationId": "FindWithLike",
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                  "name": "nom",
                  "in": "path",
                  "description": "exact name of the denree",
                  "required": true,
                  "type": "string"
                }
              ],
              "responses": {
                "default": {
                  "description": "successful operation (care that, it's a create taking place, nutriscore will be at null)",
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id_denree": {"type": "integer","format": "int64"},
                      "nom": {"type":"string"},
                      "nutriscore": {"type": "string"},
                      "calories" : {"type": "integer", "format": "int64"}
                    }
                  }
                }
              }
            }
          },
          "/denree/NutriAndCalo/{id_denree}": {
            "get": {
              "tags": [
                "denree"
              ],
              "summary": "Get the nutriscore and the calories for a denree",
              "description": "with an ID, search a denree and send it's calories and nutriscore",
              "operationId": "Get_Nut_and_Cal",
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                  "name": "id_denree",
                  "in": "path",
                  "description": "the id of the denree",
                  "required": true,
                  "type": "integer"
                }
              ],
              "responses": {
                "default": {
                  "description": "successful operation",
                  "schema": {
                    "type": "object",
                    "properties": {
                      "nutriscore": {"type": "string"},
                      "calories" : {"type": "integer", "format": "int64"}
                    }
                  }
                }
              }
            }
          },
          "/recette/GetAllNutAndCal/{id_recette}": {
            "get": {
              "tags": [
                "recipe"
              ],
              "summary": "Get the nutriscore and the calories for all that is in a recipe",
              "description": "with an ID, search a recipe and sends the calories and nutriscore of all it's denree",
              "operationId": "GetAllNutAndCal",
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                  "name": "id_recette",
                  "in": "path",
                  "description": "the id of the denree",
                  "required": true,
                  "type": "integer"
                }
              ],
              "responses": {
                "default": {
                  "description": "successful operation",
                  "schema": {
                    "type": "object",
                    "properties": {
                      "denree": { "type" : "array", "items" :
                        {"type": "object", "properties": 
                          {
                            "nutriscore": {"type":"string"},
                            "calories": {"type": "integer","format": "int64"}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/recette/GetMeanNutAndCal/{id_recette}": {
            "get": {
              "tags": [
                "recipe"
              ],
              "summary": "Get the mean of the nutriscore and the calories for all that is in a recipe",
              "description": "with an ID, search a recipe and sends the mean of the calories and nutriscore of all it's denree",
              "operationId": "GetMeanNutAndCal",
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                  "name": "id_recette",
                  "in": "path",
                  "description": "the id of the denree",
                  "required": true,
                  "type": "integer"
                }
              ],
              "responses": {
                "default": {
                  "description": "successful operation",
                  "schema": {
                    "type": "object",
                    "properties": {
                      "nutriscore": {"type":"string"},
                      "calories": {"type": "integer","format": "int64"}
                  }
                }
              }
            }
          }
        },
        "/recette/GetFromCategory/{periode}": {
          "get": {
            "tags": [
              "recipe"
            ],
            "summary": "Get back a list of recipes from their categories",
            "description": "with a period, get back all the recipes linked to it",
            "operationId": "Get_From_Cat",
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "name": "periode",
                "in": "path",
                "description": "matin, midi or soir",
                "required": true,
                "type": "integer"
              }
            ],
            "responses": {
              "default": {
                "description": "successful operation",
                "schema": {
                  "type": "object",
                  "properties": {
                    "recette": { "type" : "array", "items" :
                      {
                        "$ref": "#/definitions/Recette_all_info" 
                      }
                    }
                  }
              }
            }
          }
        }
      },
      "/categorie/": {
        "get": {
          "tags": [
            "categorie"
          ],
          "summary": "get the list of all categories",
          "description": "get a full list of periods",
          "operationId": "findAll",
          "produces": [
            "application/json"
          ],
          "responses": {
            "default": {
              "description": "successful operation",
              "schema": {
                "type": "object",
                "properties": {
                  "categories": { "type" : "array", "items" :
                    {
                      "$ref": "#/definitions/Categorie_full"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-access-token",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "rôle": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "family": {
                "type": "integer",
                "format": "int64"
              },
              "role": {
                "type": "string"
              }
            }
          }
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Famille": {
      "type": "object",
      "properties": {
        "id_famille": {
          "type": "integer",
          "format": "int64"
        },
        "nom": {
          "type": "string"
        },
        "code_acces": {
          "type": "string"
        },
        "nb_membres": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Famille"
      }
    },
    "Famille-without-id-and-nb_members": {
      "type": "object",
      "properties": {
        "nom": {
          "type": "string"
        },
        "code_acces": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Famille-without-id-and-nb_members"
      }
    },
    "Famille_Membre": {
      "type": "object",
      "properties": {
        "id_famille": {
          "type": "integer",
          "format": "int64"
        },
        "id_membre": {
          "type": "integer",
          "format": "int64"
        },
        "role": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Famille_Membre"
      }
    },
    "Menu":{
      "type": "object",
      "properties": {
      "période_debut" : {"type" : "string", "format": "date"},
      "période_fin"   : {"type" : "string", "format": "date"},
      "id_menu" : {"type" : "integer", "format": "int64"},
      "id_famille" : {"type" : "integer", "format" : "int64"},
      "plat_identique_matin" : {"type": "integer", "format": "int64"},
      "plat_identique_midi" : {"type": "integer", "format": "int64"},
      "plat_identique_soir" : {"type": "integer", "format": "int64"},
      "days_until_suggestion": {"type": "integer", "format": "int64"},
      "type" : {"type" : "string" },
      "verrou" : {"type": "boolean"}
      }
    },
    "Menu_full":{
      "type": "object",
      "properties": {
      "période_debut" : {"type" : "string", "format": "date"},
      "période_fin"   : {"type" : "string", "format": "date"},
      "id_menu" : {"type" : "integer", "format": "int64"},
      "id_famille" : {"type" : "integer", "format" : "int64"},
      "plat_identique_matin" : {"type": "integer", "format": "int64"},
      "plat_identique_midi" : {"type": "integer", "format": "int64"},
      "plat_identique_soir" : {"type": "integer", "format": "int64"},
      "days_until_suggestion": {"type": "integer", "format": "int64"},
      "type" : {"type" : "string" },
      "verrou" : {"type": "boolean"},
      "calendrier" : { "$ref": "#/definitions/Calendrier_full"}
      }
    },
    "Calendrier_full":{
      "type": "object",
      "properties": {
        "date" : {"type" : "string", "format": "date"},
        "id_calendrier" : {"type" : "integer", "format": "int64"},
        "menu_calendrier" : {"$ref": "#/definitions/Menu_Calendrier_full"},
        "calendrier_rectte" : {"$ref": "#/definitions/Calendrier_Recette_full"} 
      }
    },
    "Menu_Calendrier_full":{
      "type": "object",
      "properties": {
        "id_menu" : {"type" : "integer", "format": "int64"},
        "id_calendrier" : {"type" : "integer", "format": "int64"}
      }
    },
    "Calendrier_Recette_full":{
      "type": "object",
      "properties": {
        "id_periode" : {"type" : "integer", "format": "int64"},
        "id_calendrier" : {"type" : "integer", "format": "int64"},
        "id_recette" : {"type" : "integer", "format": "int64"},
        "periode" : {"type" : "string"},
        "is_recette" : {"type": "integer", "format": "int64"},
        "nb_personne" : {"type" : "integer", "format": "int64"},
        "recette" : { "$ref": "#/definitions/Recette_Semi"},
        "suggestion" : { "$ref": "#/definitions/Suggestion_full"},
        "tags": { "$ref":"#/definitions/Tags_full"}
      }
    },
    "Recette_Semi" : {
      "type": "object",
      "properties": {
        "nom" : {"type" : "string"},
        "tags": { "$ref":"#/definitions/Tags_full"}
      }
    },
    "Suggestion_full" : {
      "type": "object",
      "properties": {
        "id_periode" : {"type" : "integer", "format": "int64"},
        "id_recette" : {"type" : "integer", "format": "int64"},
        "id_membre" : {"type" : "integer", "format": "int64"},
        "id_menu" : {"type" : "integer", "format": "int64"},
        "membre" : {"$ref" : "#/definitions/Membre_full"},
        "recette" : {"$ref" : "#/definitions/Recette_Semi"}
      }
    },
    "Tags_full":{
      "type": "object",
      "properties": {
        "id_tag": { "type" : "integer", "format": "int64"},
        "nom" : {"type" : "string"}
      }
    },
    "Categorie_full":{
      "type": "object",
      "properties": {
        "id_categorie": { "type" : "integer", "format": "int64"},
        "nom" : {"type" : "string"}
      }
    },
    "Membre_full":{
      "type": "object",
      "properties": {
        "id_membre" : {"type" : "integer", "format": "int64"},
        "nom" : {"type" : "string"},
        "prenom" : {"type" : "string"},
        "email" : {"type" : "string"},
        "secret" : {"type" : "string"}
      }
    },
    "Membre_full_without_pswd":{
      "type": "object",
      "properties": {
        "id_membre" : {"type" : "integer", "format": "int64"},
        "nom" : {"type" : "string"},
        "prenom" : {"type" : "string"},
        "email" : {"type" : "string"}
      }
    },
    "Denree_full" :{
      "type": "object",
      "properties": {
        "id_denree" : {"type" : "integer", "format": "int64"},
        "nom" : {"type" : "string"},
        "nutriscore" : {"type" : "string"},
        "calories": {"type": "integer","format": "int64"},
        "recette_denree" : {"type": "object", "properties": {"quantite" : {"type" : "integer", "format": "int64"}}}
      }
    },
    "Recette_all_info":{
      "type": "object",
      "properties": {
        "nom" : {"type" : "string"},
        "difficulte" : {"type" : "integer", "format": "int64"},
        "calorie" : {"type" : "integer", "format": "int64"},
        "temps_cuisson" : {"type" : "integer", "format": "int64"},
        "temps_preparation" : {"type" : "integer", "format": "int64"},
        "nb_personne" : {"type" : "integer", "format": "int64"},
        "nutriscore" : {"type" : "string"},
        "preparation" : {"type" : "string"},
        "image_url" : {"type" : "string"},
        "tags": { "$ref":"#/definitions/Tags_full"},
        "categorie": { "$ref": "#/definitions/Categorie_full"},
        "denree" : { "$ref": "#/definitions/Denree_full"}
      }
    }
  }
}