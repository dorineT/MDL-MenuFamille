{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "Forchete & Coûtê",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/info",
  "tags": [
    {
      "name": "user",
      "description": "Everything about users accounts"
    },
    {
      "name": "family",
      "description": "Everything about family"
    },
    {
      "name": "menu",
      "description": "Operations about menu"
    },
    {
      "name": "membre",
      "description": "Operations about Membre"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/createWithArray": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithArrayInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithListInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/CreateFamilly/{id_mem}": {
      "post": {
        "tags": [
          "family"
        ],
        "summary": "Create family",
        "description": "This can only be done by the logged in user.",
        "operationId": "CreateFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member that's creating the familly",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created family object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Famille-without-id-and-nb_members"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Famille"
            }
          }
        }
      }
    },
    "/CheckAccesCode/{code}": {
      "get": {
        "tags": [
          "family"
        ],
        "summary": "Return the familly link to an acces code",
        "description": "for the checking of a acces code link, it will return the familly to the front-end for easier add",
        "operationId": "CheckAccesCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code that the futur member need to have to join",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Famille"
            }
          }
        }
      }
    },
    "/RetirerMembreNumber/{id}": {
      "put": {
        "tags": [
          "family"
        ],
        "summary": "lower a member to the member count of familly",
        "description": "for easier back-end understandability, the add and lower member count by hand",
        "operationId": "RetirerMembreNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "nb_member": {"type": "integer", "format": "int64"}
              }
            }
          }
        }
      }
    },
    "/AjouterMembreNumber/{id}": {
      "put": {
        "tags": [
          "family"
        ],
        "summary": "add a member to the member count of familly",
        "description": "for easier back-end understandability, the add and lower member count by hand",
        "operationId": "Ajouter MembreNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "nb_member": {"type": "integer", "format": "int64"}
              }
            }
          }
        }
      }
    },
    "/IsThereParent/{id_fam}": {
      "get": {
        "tags": [
          "family"
        ],
        "summary": "Return true if a familly as a Parent",
        "description": "return true if a familly as a Parent and return false if not",
        "operationId": "PapaOuTes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fam",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "is_okay": {"type": "boolean", "value": "true"}
              }
            }
          }
        }
      }
    },
    "/Defrole/{id_fam}/{id_mem}": {
      "put": {
        "tags": [
          "family"
        ],
        "summary": "Define the role of a member",
        "description": "Used to change the role of a member of a familly",
        "operationId": "DefineRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fem",
            "in": "path",
            "description": "id of the familly that the member will change role for",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member that will change role",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created family object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {"type": "string"}
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "is_okay": {"type": "boolean", "value": "true"}
              }
            }
          }
        }
      }
    },
    "/{id_fam}/{id_mem}": {
      "delete": {
        "tags": [
          "family"
        ],
        "summary": "Delete a member from a familly",
        "description": "Used to delete a member from a familly",
        "operationId": "DeleteMemberFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_fem",
            "in": "path",
            "description": "id of the familly that the member will leave",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id_mem",
            "in": "path",
            "description": "id of the member that will leave a familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/GetListFamilly/{id}": {
      "get": {
        "tags": [
          "family"
        ],
        "summary": "Return all the familly a member is part of",
        "description": "Return all the familly a member is part of but not the role he has in all of those",
        "operationId": "GetListFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Famille"
              }
            }
          }
        }
      }
    },
    "/{id}": {
      "delete": {
        "tags": [
          "family"
        ],
        "summary": "Delete a familly and return a message is it was ok",
        "description": "Delete a familly and will delete the link between member and familly",
        "operationId": "DeleteFamilly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the familly",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-access-token",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "rôle": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "family": {
                "type": "integer",
                "format": "int64"
              },
              "role": {
                "type": "string"
              }
            }
          }
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Famille": {
      "type": "object",
      "properties": {
        "id_famille": {
          "type": "integer",
          "format": "int64"
        },
        "nom": {
          "type": "string"
        },
        "code_acces": {
          "type": "string"
        },
        "nb_membres": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Famille"
      }
    },
    "Famille-without-id-and-nb_members": {
      "type": "object",
      "properties": {
        "nom": {
          "type": "string"
        },
        "code_acces": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Famille-without-id-and-nb_members"
      }
    },
    "Famille_Membre": {
      "type": "object",
      "properties": {
        "id_famille": {
          "type": "integer",
          "format": "int64"
        },
        "id_membre": {
          "type": "integer",
          "format": "int64"
        },
        "role": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Famille_Membre"
      }
    }
  }
}